{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","employees","setEmployees","direction","setDirection","filteredEmployees","setFilteredEmployees","filter","setFilter","useEffect","fetch","then","j","json","result","results","className","placeholder","value","onChange","ev","filteredArray","employee","name","last","toLowerCase","includes","target","onClick","sortedEmployees","sort","a","b","sortByName","map","gender","first","email","cell","src","picture","thumbnail","alt","location","coordinates","latitude","renderEmployee","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,kBC+EAA,MA1Ef,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEqBF,mBAAS,OAF9B,mBAENG,EAFM,KAEKC,EAFL,OAGqCJ,mBAAS,IAH9C,mBAGNK,EAHM,KAGaC,EAHb,OAIeN,mBAAS,IAJxB,mBAINO,EAJM,KAIEC,EAJF,KA+Cb,OA1CAC,qBAAU,WACRC,MAAM,0CACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACLZ,EAAaY,EAAOC,SACpBT,EAAqBQ,EAAOC,cAE/B,IAoCD,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,YAAlB,UACE,uBACEA,UAAU,gCACVC,YAAY,iBACZC,MAAOX,EACPY,SA9Ba,SAACC,GACpB,IAAMC,EAAgBpB,EAAUM,QAAO,SAACe,GAAD,OACrCA,EAASC,KAAKC,KAAKC,cAAcC,SAASN,EAAGO,OAAOT,MAAMO,kBAE5DnB,EAAqB,YAAIe,IACzBb,EAAUY,EAAGO,OAAOT,UA2BhB,0BAASF,UAAU,mBAAnB,UACE,wCACA,mBACEA,UAAU,8BACVY,QAAS,kBA/CA,WACjB,IAAMC,EAAkBxB,EAAkByB,MAAK,SAACC,EAAGC,GACjD,MAAkB,QAAd7B,EACK4B,EAAER,KAAKC,KAAOQ,EAAET,KAAKC,MAAQ,EAAI,EAEjCQ,EAAET,KAAKC,KAAOO,EAAER,KAAKC,MAAQ,EAAI,KAG5CpB,EAA2B,QAAdD,EAAsB,OAAS,OAC5CD,EAAa,YAAI2B,IAsCMI,IAFjB,kBAMA,sCACA,qCACA,yCAED5B,EAAkB6B,KAAI,SAACZ,GAAD,OArCN,SAACA,GAAD,OACrB,0BACEN,UAAU,mBADZ,UAIE,4BAAIM,EAASa,SACb,8BACGb,EAASC,KAAKa,MADjB,IACyBd,EAASC,KAAKC,QAEvC,4BAAIF,EAASe,QACb,4BAAIf,EAASgB,OACb,qBAAKtB,UAAU,iBAAf,SACE,qBAAKuB,IAAKjB,EAASkB,QAAQC,UAAWC,IAAI,gBATvCpB,EAASqB,SAASC,YAAYC,UAkCIC,CAAexB,YC7D7CyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.475c2fb2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./index.scss\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [direction, setDirection] = useState(\"asc\");\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?results=100\")\n      .then((j) => j.json())\n      .then((result) => {\n        setEmployees(result.results);\n        setFilteredEmployees(result.results);\n      });\n  }, []);\n  const sortByName = () => {\n    const sortedEmployees = filteredEmployees.sort((a, b) => {\n      if (direction === \"asc\") {\n        return a.name.last < b.name.last ? -1 : 1;\n      } else {\n        return b.name.last < a.name.last ? -1 : 1;\n      }\n    });\n    setDirection(direction === \"asc\" ? \"desc\" : \"asc\");\n    setEmployees([...sortedEmployees]);\n  };\n  const filterByName = (ev) => {\n    const filteredArray = employees.filter((employee) =>\n      employee.name.last.toLowerCase().includes(ev.target.value.toLowerCase())\n    );\n    setFilteredEmployees([...filteredArray]);\n    setFilter(ev.target.value);\n  };\n  const renderEmployee = (employee) => (\n    <section\n      className=\"grid-1-2-3-2-2-2\"\n      key={employee.location.coordinates.latitude}\n    >\n      <p>{employee.gender}</p>\n      <p>\n        {employee.name.first} {employee.name.last}\n      </p>\n      <p>{employee.email}</p>\n      <p>{employee.cell}</p>\n      <div className=\"place-x-center\">\n        <img src={employee.picture.thumbnail} alt=\"profile\" />\n      </div>\n    </section>\n  );\n  return (\n    <div className=\"App\">\n      <header className=\"container\">\n        <input\n          className=\"b-rounded b-primary p-2 m-y-2\"\n          placeholder=\"search by name\"\n          value={filter}\n          onChange={filterByName}\n        />\n        <section className=\"grid-1-2-3-2-2-2\">\n          <p> Gender</p>\n          <p\n            className=\"cursor-pointer text-primary\"\n            onClick={() => sortByName()}\n          >\n            Name\n          </p>\n          <p>Email</p>\n          <p>Cell</p>\n          <p>Image</p>\n        </section>\n        {filteredEmployees.map((employee) => renderEmployee(employee))}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}